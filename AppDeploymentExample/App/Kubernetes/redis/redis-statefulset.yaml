apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-cluster
  namespace: redis
spec:
  serviceName: redis-cluster
  replicas: 6
  selector:
    matchLabels:
      app: redis-cluster
  template:
    metadata:
      labels:
        app: redis-cluster
    spec:
      initContainers:
      - name: set-announce-ip
        image: busybox
        command:
        - sh
        - -c
        - |
          POD_NAME=$(cat /etc/podname/name)
          ANNOUNCE_IP=$(grep "^$POD_NAME:" /etc/announce-ips/data | cut -d':' -f2 | tr -d ' ' || echo "")
          echo "cluster-announce-ip $ANNOUNCE_IP" > /etc/redis/announce-ip.conf
        volumeMounts:
        - name: podname
          mountPath: /etc/podname
        - name: announce-ips
          mountPath: /etc/announce-ips
        - name: announce-ip
          mountPath: /etc/redis
      - name: redis-cluster-init
        image: redis:7.0
        command:
        - sh
        - -c
        - |
          for i in {1..60}; do
            if redis-cli -a your-secure-password ping -h 172.16.29.110 -p 6379 && redis-cli -a your-secure-password ping -h 172.16.29.111 -p 6379 && redis-cli -a your-secure-password ping -h 172.16.29.112 -p 6379 && redis-cli -a your-secure-password ping -h 172.16.29.113 -p 6379 && redis-cli -a your-secure-password ping -h 172.16.29.114 -p 6379 && redis-cli -a your-secure-password ping -h 172.16.29.115 -p 6379; then
              if ! redis-cli -a your-secure-password --cluster check 172.16.29.110:6379 | grep -q "All 16384 slots covered"; then
                redis-cli -a your-secure-password --cluster create 172.16.29.110:6379 172.16.29.111:6379 172.16.29.112:6379 172.16.29.113:6379 172.16.29.114:6379 172.16.29.115:6379 --cluster-replicas 0 --cluster-yes
              fi
              exit 0
            fi
            sleep 2
          done
          exit 1
        volumeMounts:
        - name: redis-config
          mountPath: /etc/redis/redis.conf
          subPath: redis.conf
      containers:
      - name: redis
        image: redis:7.0
        args:
        - redis-server
        - /etc/redis/redis.conf
        ports:
        - containerPort: 6379
          name: redis
        - containerPort: 16379
          name: cluster
        volumeMounts:
        - name: redis-config
          mountPath: /etc/redis/redis.conf
          subPath: redis.conf
        - name: announce-ip
          mountPath: /etc/redis/announce-ip.conf
          subPath: announce-ip.conf
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
      volumes:
      - name: announce-ip
        emptyDir: {}
      - name: podname
        downwardAPI:
          items:
          - path: name
            fieldRef:
              fieldPath: metadata.name
      - name: announce-ips
        configMap:
          name: redis-announce-ips
      - name: redis-config
        configMap:
          name: redis-config
  volumeClaimTemplates: []