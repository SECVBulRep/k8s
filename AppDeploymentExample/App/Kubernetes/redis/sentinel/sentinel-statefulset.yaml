apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sentinel
  namespace: redis
spec:
  serviceName: sentinel
  replicas: 3
  selector:
    matchLabels:
      app: sentinel
  template:
    metadata:
      labels:
        app: sentinel
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
        longhorn.io/volume-eviction-policy: "delete"
    spec:
      terminationGracePeriodSeconds: 10
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: sentinel
              topologyKey: kubernetes.io/hostname
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: sentinel
      tolerations:
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 10
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 10
      initContainers:
        - name: set-announce-ip
          image: busybox
          command:
            - sh
            - -c
            - |
              POD_NAME=$(cat /etc/podname/name)
              ANNOUNCE_IP=$(grep "^$POD_NAME:" /etc/announce-ips/data | cut -d':' -f2 | tr -d ' ')
              if [ -z "$ANNOUNCE_IP" ]; then
                echo "Error: No IP found for $POD_NAME"
                exit 1
              fi
              echo "sentinel announce-ip $ANNOUNCE_IP" > /tmp/sentinel/announce-ip.conf
          volumeMounts:
            - name: podname
              mountPath: /etc/podname
            - name: announce-ips
              mountPath: /etc/announce-ips
            - name: sentinel-conf
              mountPath: /tmp/sentinel
      containers:
        - name: sentinel
          image: redis:7.0
          args:
            - redis-sentinel
            - /etc/redis/sentinel.conf
            - --include
            - /etc/redis/announce-ip.conf
          ports:
            - containerPort: 26379
              name: sentinel
          volumeMounts:
            - name: sentinel-config
              mountPath: /etc/redis/sentinel.conf
              subPath: sentinel.conf
            - name: sentinel-conf
              mountPath: /etc/redis/announce-ip.conf
              subPath: announce-ip.conf
            - name: sentinel-data
              mountPath: /data
            - name: sentinel-conf
              mountPath: /tmp/sentinel
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
      volumes:
        - name: podname
          downwardAPI:
            items:
              - path: name
                fieldRef:
                  fieldPath: metadata.name
        - name: announce-ips
          configMap:
            name: redis-announce-ips
        - name: sentinel-config
          configMap:
            name: redis-config
        - name: sentinel-conf
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: sentinel-data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: longhorn-custom
        resources:
          requests:
            storage: 1Gi