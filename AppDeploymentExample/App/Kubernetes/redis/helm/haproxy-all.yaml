# HAProxy с ПРАВИЛЬНЫМИ health checks под healthcheck пользователем
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: haproxy-correct-healthcheck
  namespace: redis
data:
  haproxy.cfg: |
    global
        daemon
        maxconn 1000

    defaults
        mode tcp
        timeout connect 5000ms
        timeout client 50000ms
        timeout server 50000ms

    frontend redis_frontend
        bind *:6379
        default_backend redis_backend

    backend redis_backend
        mode tcp
        balance first
        option tcp-check
        
        # ПРАВИЛЬНАЯ последовательность health check команд:
        tcp-check connect
        
        # 1. Авторизация (ИСПРАВЛЕННЫЙ формат)
        tcp-check send "AUTH healthcheck HEALTHCHECK_PASSWORD_PLACEHOLDER\r\n"
        tcp-check expect string "+OK"
        
        # 2. Проверка доступности  
        tcp-check send "PING\r\n"
        tcp-check expect string "+PONG"
        
        # 3. Проверка роли мастера
        tcp-check send "INFO replication\r\n"
        tcp-check expect string "role:master"
        
        # 4. Закрытие
        tcp-check send "QUIT\r\n"
        tcp-check expect string "+OK"
        
        # Redis серверы
        server redis-0 redis-node-0.redis-headless.redis.svc.cluster.local:6379 check inter 5s fall 3 rise 2
        server redis-1 redis-node-1.redis-headless.redis.svc.cluster.local:6379 check inter 5s fall 3 rise 2
        server redis-2 redis-node-2.redis-headless.redis.svc.cluster.local:6379 check inter 5s fall 3 rise 2

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: haproxy-correct-healthcheck
  namespace: redis
  labels:
    app: haproxy-correct-healthcheck
spec:
  replicas: 2
  selector:
    matchLabels:
      app: haproxy-correct-healthcheck
  template:
    metadata:
      labels:
        app: haproxy-correct-healthcheck
    spec:
      containers:
      - name: haproxy
        image: haproxy:2.9-alpine
        ports:
        - containerPort: 6379
          name: redis
        env:
        - name: HEALTHCHECK_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-healthcheck-secret
              key: password
        volumeMounts:
        - name: config-template
          mountPath: /etc/haproxy-template
          readOnly: true
        command: ["/bin/sh"]
        args:
        - -c
        - |
          echo "=== HAProxy CORRECT healthcheck version ==="
          
          if [ -z "$HEALTHCHECK_PASSWORD" ]; then
            echo "ERROR: Password not available!"
            exit 1
          fi
          
          echo "Password: ${HEALTHCHECK_PASSWORD}"
          
          # Подставляем пароль (ПРАВИЛЬНО)
          sed "s/HEALTHCHECK_PASSWORD_PLACEHOLDER/${HEALTHCHECK_PASSWORD}/g" \
            /etc/haproxy-template/haproxy.cfg > /tmp/haproxy.cfg
          
          # Показываем что получилось
          echo "=== Generated AUTH command ==="
          grep "AUTH.*healthcheck" /tmp/haproxy.cfg
          
          # Проверяем синтаксис
          haproxy -f /tmp/haproxy.cfg -c
          if [ $? -ne 0 ]; then
            echo "Config error!"
            exit 1
          fi
          
          echo "Starting HAProxy..."
          exec haproxy -f /tmp/haproxy.cfg
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      - name: config-template
        configMap:
          name: haproxy-correct-healthcheck

---
apiVersion: v1
kind: Service
metadata:
  name: redis-external
  namespace: redis
  labels:
    app: haproxy-correct-healthcheck
spec:
  type: LoadBalancer
  loadBalancerIP: "172.16.29.110"
  selector:
    app: haproxy-correct-healthcheck
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
    protocol: TCP