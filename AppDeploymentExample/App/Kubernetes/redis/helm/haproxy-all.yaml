apiVersion: v1
kind: ConfigMap
metadata:
  name: haproxy-config
  namespace: redis
data:
  haproxy.cfg: |
    global
        daemon
        maxconn 256

    defaults
        mode tcp
        timeout connect 5000ms
        timeout client 50000ms
        timeout server 50000ms

    frontend redis_frontend
        bind *:6379
        default_backend redis_backend

    backend redis_backend
        mode tcp
        balance first
        option tcp-check
        # Проверяем что это Redis
        tcp-check connect
        tcp-check send PING\r\n
        tcp-check expect string +PONG
        # Проверяем что это master
        tcp-check send info\ replication\r\n
        tcp-check expect string role:master
        tcp-check send QUIT\r\n
        tcp-check expect string +OK
        # Проверяем все 3 ноды
        server redis-0 redis-node-0.redis-headless.redis.svc.cluster.local:6379 check inter 2s
        server redis-1 redis-node-1.redis-headless.redis.svc.cluster.local:6379 check inter 2s
        server redis-2 redis-node-2.redis-headless.redis.svc.cluster.local:6379 check inter 2s

---
# Deployment HAProxy
apiVersion: apps/v1
kind: Deployment
metadata:
  name: haproxy
  namespace: redis
  labels:
    app: haproxy
spec:
  replicas: 2
  selector:
    matchLabels:
      app: haproxy
  template:
    metadata:
      labels:
        app: haproxy
    spec:
      containers:
      - name: haproxy
        image: haproxy:2.9-alpine
        ports:
        - containerPort: 6379
          name: redis
        volumeMounts:
        - name: config
          mountPath: /usr/local/etc/haproxy
          readOnly: true
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: config
        configMap:
          name: haproxy-config

---
# Service для HAProxy с внешним доступом
apiVersion: v1
kind: Service
metadata:
  name: redis-master
  namespace: redis
  labels:
    app: haproxy
spec:
  type: LoadBalancer
  loadBalancerIP: "172.16.29.110"
  selector:
    app: haproxy
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
    protocol: TCP