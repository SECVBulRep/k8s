apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: rabbitmq
spec:
  serviceName: rabbitmq
  replicas: 3
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      serviceAccountName: rabbitmq
      initContainers:
      - name: wait-for-previous
        image: busybox
        command:
        - /bin/sh
        - -c
        - |
          if [ "$HOSTNAME" != "rabbitmq-0" ]; then
            until ping -c 1 rabbitmq-$(( ${HOSTNAME##*-} - 1 )).rabbitmq.rabbitmq.svc.cluster.local; do
              echo "Waiting for rabbitmq-$(( ${HOSTNAME##*-} - 1 )) to be ready...";
              sleep 5;
            done;
          fi
      containers:
      - name: rabbitmq
        image: rabbitmq:3.13-management
        ports:
        - containerPort: 5672
          name: amqp
        - containerPort: 15672
          name: management
        - containerPort: 4369
          name: epmd
        - containerPort: 25672
          name: clustering
        env:
        - name: RABBITMQ_ERLANG_COOKIE
          value: "JFKZVCBYEISEQILVZMSD"
        - name: RABBITMQ_DEFAULT_USER
          value: "app"
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secret
              key: app-password
        - name: RABBITMQ_DEFAULT_VHOST
          value: "/"
        - name: K8S_SERVICE_NAME
          value: "rabbitmq"
        - name: K8S_ADDRESS_TYPE
          value: "hostname"
        - name: K8S_HOST
          value: "kubernetes.default.svc.cluster.local"
        - name: K8S_HOSTNAME_SUFFIX
          value: ".rabbitmq.rabbitmq.svc.cluster.local"
        volumeMounts:
        - name: rabbitmq-config
          mountPath: /etc/rabbitmq/rabbitmq.conf
          subPath: rabbitmq.conf
        - name: rabbitmq-config
          mountPath: /etc/rabbitmq/enabled_plugins
          subPath: enabled_plugins
        - name: rabbitmq-data
          mountPath: /var/lib/rabbitmq
        - name: kube-api-access
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          readOnly: true
      - name: ha-policy
        image: rabbitmq:3.13-management
        command:
        - /bin/bash
        - -c
        - |
          sleep 10 && rabbitmqctl set_policy ha-all ".*" '{"ha-mode":"all","ha-sync-mode":"automatic"}' && tail -f /dev/null
        env:
        - name: RABBITMQ_ERLANG_COOKIE
          value: "JFKZVCBYEISEQILVZMSD"
        - name: RABBITMQ_DEFAULT_USER
          value: "app"
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secret
              key: app-password
      volumes:
      - name: rabbitmq-config
        configMap:
          name: rabbitmq-config
      - name: rabbitmq-data
        emptyDir: {}
      - name: kube-api-access
        projected:
          sources:
          - serviceAccountToken:
              path: token
              expirationSeconds: 3600
              audience: kubernetes.default.svc.cluster.local
          - configMap:
              name: kube-root-ca.crt
              items:
              - key: ca.crt
                path: ca.crt
          - downwardAPI:
            items:
            - path: namespace
              fieldRef:
                fieldPath: metadata.namespace